services:
  apigw-service:
    image: ghcr.io/aet-devops25/team-continuous-disappointment/api-gw:latest
    container_name: apigw
    ports:
      - "8080:8080"
    restart: unless-stopped
    env_file:
      - ./server/.env

  user-service:
    image: ghcr.io/aet-devops25/team-continuous-disappointment/user:latest
    container_name: apigw
    ports:
      - "8081:8081"
    restart: unless-stopped
    env_file:
      - ./server/.env
  chat-service:
    image: ghcr.io/aet-devops25/team-continuous-disappointment/chat:latest
    container_name: apigw
    ports:
      - "8082:8082"
    restart: unless-stopped
    env_file:
      - ./server/.env

  genai-service:
    image: ghcr.io/aet-devops25/team-continuous-disappointment/genai:latest
    container_name: genai
    ports:
      - "8000:8000"
    depends_on:
      - apigw-service
      - qdrant-service
    restart: unless-stopped
    env_file:
      - ./genai/.env
    environment:
      - QDRANT_HOST: http://qdrant-service:6333

  qdrant-service:
    image: qdrant/qdrant
    container_name: qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage

  client-service:
    image: ghcr.io/aet-devops25/team-continuous-disappointment/client:latest
    container_name: client
    ports:
      - "3000:80"
    depends_on:
      - apigw-service
    volumes:
      - ./client/config.json:/usr/share/nginx/html/config.json:ro
    restart: unless-stopped

  mongodb:
    image: mongo:8.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=recipai
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8083:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongodb
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_FEATURE_TOGGLES_ENABLE=logsInExplore
      - GF_LOG_CONSOLECOLORS=true
    depends_on:
      - prometheus
      - loki
    restart: unless-stopped

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./monitoring/promtail/promtail.yaml:/etc/promtail/promtail.yaml
    command: -config.file=/etc/promtail/promtail.yaml
    depends_on:
      - loki
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/loki-config.yaml:/etc/loki/loki-config.yaml:ro
      - loki-data:/loki
    command: -config.file=/etc/loki/loki-config.yaml
    restart: unless-stopped

  # This service is used to collect metrics from docker containers, not needed for k8s
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8003:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    restart: unless-stopped

volumes:
  qdrant_storage:
  mongodb_data:
  prometheus_data:
  grafana-storage:
  loki-data:
