name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/**
    paths:
      - 'genai/**'
      - 'server/**'
      - 'client/**'
      - '.github/workflows/ci-cd.yml'

#----- Detect changes in services and trigger builds accordingly ------#
jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      genai: ${{ steps.filter.outputs.genai }}
      server: ${{ steps.filter.outputs.server }}
      client: ${{ steps.filter.outputs.client }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            genai:
              - 'genai/**'
            server:
              - 'server/**'
            client:
              - 'client/**'

#-------- Build and Test Services -----------------------------#
  build-genai:
    needs: detect-changes
    if: |
      startsWith(github.ref, 'refs/heads/feature/') && needs.detect-changes.outputs.genai == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt
        working-directory: genai

      - name: Lint Python code
        run: |
          pip install flake8
          flake8 . || exit 1
        working-directory: genai

  build-server:
    needs: detect-changes
    if: |
      startsWith(github.ref, 'refs/heads/feature/') && needs.detect-changes.outputs.server == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: server

      - name: Build with Gradle
        run: ./gradlew build
        working-directory: server

      - name: Run tests
        run: ./gradlew test
        working-directory: server

  build-client:
    needs: detect-changes
    if: |
      startsWith(github.ref, 'refs/heads/feature/') && needs.detect-changes.outputs.client == 'true'
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: npm install --include=dev
        working-directory: client

      - name: Build with Node
        run: npm run build
        working-directory: client

#-------- Publish Docker images of services -----------------------------#
  docker-release-genai:
    needs: detect-changes
    if: github.ref == 'refs/heads/main' && needs.detect-changes.outputs.genai == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        working-directory: genai
        run: docker build -t ghcr.io/aet-devops25/team-continuous-disappointment/genai:latest .

      - name: Push Docker image
        run: docker push ghcr.io/aet-devops25/team-continuous-disappointment/genai:latest

  docker-release-server:
    needs: detect-changes
    if: github.ref == 'refs/heads/main' && needs.detect-changes.outputs.server == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: server

      - name: Build with Gradle
        run: ./gradlew build
        working-directory: server

      - name: Run tests
        run: ./gradlew test
        working-directory: server

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        working-directory: server
        run: docker build -t ghcr.io/aet-devops25/team-continuous-disappointment/server:latest .

      - name: Push Docker image
        run: docker push ghcr.io/aet-devops25/team-continuous-disappointment/server:latest

  docker-release-client:
    needs: detect-changes
    if: github.ref == 'refs/heads/main' && needs.detect-changes.outputs.client == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      NODE_ENV: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        working-directory: client
        run: docker build -t ghcr.io/aet-devops25/team-continuous-disappointment/client:latest .

      - name: Push Docker image
        run: docker push ghcr.io/aet-devops25/team-continuous-disappointment/client:latest

#-------- Deploy Services on k8s cluster via helm -----------------------------#

  helm-deploy:
    needs: [detect-changes, docker-release-genai, docker-release-server, docker-release-client]
    if: |
      github.ref == 'refs/heads/main' && (
        needs.detect-changes.outputs.genai == 'true' ||
        needs.detect-changes.outputs.server == 'true' ||
        needs.detect-changes.outputs.client == 'true'
      )
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Deploy with Helm
        run: helm -n team-continuous-disappointment upgrade recip-ai ./recipai-chart \
          --set secrets.gitlabClientSecret="${{ secrets.PROD_CLIENT_SECRET }}"